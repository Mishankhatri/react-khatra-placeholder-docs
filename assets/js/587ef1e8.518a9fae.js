"use strict";(self.webpackChunkreact_khatra_placeholder_docs=self.webpackChunkreact_khatra_placeholder_docs||[]).push([[361],{6156:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(7294),r=t(1403);const o={margin:"1rem 0"},l=()=>{const{darkTheme:e,handleTheme:a}=(0,r.Fg)();return n.createElement("button",{className:"button button--primary",style:o,onClick:()=>a(!e)},"Toggle Theme")}},2418:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=t(7462),r=(t(7294),t(3905));t(1403),t(6156);const o={sidebar_position:2},l="Quick Start",i={unversionedId:"Quick-Start/Quick-Start",id:"Quick-Start/Quick-Start",title:"Quick Start",description:"",source:"@site/docs/Quick-Start/Quick-Start.md",sourceDirName:"Quick-Start",slug:"/Quick-Start/",permalink:"/react-khatra-placeholder-docs/docs/Quick-Start/",draft:!1,editUrl:"https://github.com/Mishankhatri/react-khatra-placeholder-docs/docs/Quick-Start/Quick-Start.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Welcome to React Khatra Placeholder",permalink:"/react-khatra-placeholder-docs/docs/intro"},next:{title:"Demo",permalink:"/react-khatra-placeholder-docs/docs/Demo/"}},c={},s=[{value:"After installation",id:"after-installation",level:2}],d={toc:s};function h(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"quick-start"},"Quick Start"),(0,r.kt)("h2",{id:"after-installation"},"After installation"),(0,r.kt)("p",null,"Import KhatraPlaceholder component from the react-khatra-placeholder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { KhatraPlaceholder } from "react-khatra-placeholder";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'export const YourContentPage = () => {\n  // your content loading logic.\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <>\n      <KhatraPlaceholder\n        isLoading={isLoading}\n        type={"ParagraphPlaceholder"}\n        delay={300}\n        animateWave\n      >\n        <div>Your Beautiful content.</div>\n      </KhatraPlaceholder>\n    </>\n  );\n};\n')),(0,r.kt)("p",null,"For Creating CustomPlaceholders import necessary components from the react-khatra-placeholder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import {\n  KhatraPlaceholder,\n  PCardContainer,\n  PCard,\n  PBlock,\n  PInlineContainer,\n  PLine,\n} from "react-khatra-placeholder";\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'const CustomPlaceholder = () => {\n  return (\n    <>\n      {/* to hold more than one PCard. */}\n      <PCardContainer>\n        {/* base component of placeholder, control animation of placeholder from here.*/}\n        <PCard w="400px" h="400px" animateWave>\n          {/* creates rectangular block of given height and border radius.*/}\n          <PBlock h="50%" br="8px" />\n          {/* base component for creating paragraph lines.*/}\n          <PInLineContainer gap="0.1rem" br="3px">\n            <PLine h="0.8rem" /> {/* creates lines, just like in paragraphs.*/}\n            <PLine w="70%" h="0.8rem" />\n            <PLine w="80%" h="0.8rem" />\n          </PInLineContainer>\n          <PBlock w="30%" h="2rem" br="3px" />\n        </PCard>\n      </PCardContainer>\n    </>\n  );\n};\n\nexport const YourContentPage = () => {\n  // your content loading logic.\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <>\n      <KhatraPlaceholder\n        isLoading={isLoading}\n        customPlaceholder={<CustomPlaceholder />}\n        delay={300}\n        animateWave\n      >\n        <div>Your Beautiful content.</div>\n      </KhatraPlaceholder>\n    </>\n  );\n};\n')))}h.isMDXComponent=!0}}]);