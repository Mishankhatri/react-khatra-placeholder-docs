"use strict";(self.webpackChunkreact_khatra_placeholder_docs=self.webpackChunkreact_khatra_placeholder_docs||[]).push([[867],{6156:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(1403);const o={margin:"1rem 0"},l=()=>{const{darkTheme:e,handleTheme:t}=(0,r.Fg)();return n.createElement("button",{className:"button button--primary",style:o,onClick:()=>t(!e)},"Toggle Theme")}},5900:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>i,default:()=>s,frontMatter:()=>d,metadata:()=>m,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),o=a(1403),l=a(6156);const d={sidebar_position:5},i="Themes",m={unversionedId:"Themes/themes",id:"Themes/themes",title:"Themes",description:"",source:"@site/docs/Themes/themes.md",sourceDirName:"Themes",slug:"/Themes/",permalink:"/react-khatra-placeholder-docs/docs/Themes/",draft:!1,editUrl:"https://github.com/Mishankhatri/react-khatra-placeholder-docs/docs/Themes/themes.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Components",permalink:"/react-khatra-placeholder-docs/docs/Components/"},next:{title:"Builtin Placeholder Types",permalink:"/react-khatra-placeholder-docs/docs/BuiltIn-Placeholders/"}},h={},p=[{value:"<code>PThemeProvider</code>",id:"pthemeprovider",level:2},{value:"<code>useTheme()</code>",id:"usetheme",level:2},{value:"<code>Theming in action:</code>",id:"theming-in-action",level:2}],k={toc:p};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"themes"},"Themes"),(0,r.kt)("h2",{id:"pthemeprovider"},(0,r.kt)("inlineCode",{parentName:"h2"},"PThemeProvider")),(0,r.kt)("p",null,"PThemeProvider is the component to pass your theme colors and state.\nMaintains own theme state with boolean state : darkTheme and handler:handleTheme and defaults to light theme.\nAccess darkTheme, handleTheme via ",(0,r.kt)("inlineCode",{parentName:"p"},"useTheme()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'//for providing darkTheme state and handler globally\nimport { PThemeProvider } from "react-khatra-placeholder";\n\nreturn (\n  <PThemeProvider\n    lightModeBackground="orange"\n    lightModeColor="brown"\n    darkModeBackground="lightgreen"\n    darkModeColor="green"\n    darkModeShine="lightblue"\n  >\n    <YourTopParentComponentPage />\n  </PThemeProvider>\n);\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Property"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"lightModeColor"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"no"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEFAULT_LIGHTMODE_LINE_COLOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"light mode color of placeholder lines and blocks.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"darkModeColor"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"no"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEFAULT_DARKMODE_LINE_COLOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"dark mode color of placeholder lines and blocks.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"lightModeBackground"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"no"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEFAULT_LIGHTMODE_BG_COLOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"light mode background color of placeholder cards.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"darkModeBackground"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"no"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEFAULT_DARKMODE_BG_COLOR"),(0,r.kt)("td",{parentName:"tr",align:"left"},"light mode background color of placeholder cards.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"lightModeShine"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"no"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEFAULT_LIGTHMODE_SHINE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"light mode shine color of placeholder lines and blocks.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"darkModeShine"),(0,r.kt)("td",{parentName:"tr",align:"left"},"String"),(0,r.kt)("td",{parentName:"tr",align:"left"},"no"),(0,r.kt)("td",{parentName:"tr",align:"left"},"DEFAULT_DARKMODE_SHINE"),(0,r.kt)("td",{parentName:"tr",align:"left"},"light mode shine color of placeholder lines and blocks.")))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'DEFAULT_LIGHTMODE_LINE_COLOR = "#d7d7d7"')," ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'DEFAULT_DARKMODE_LINE_COLOR = "#383838"')," ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'DEFAULT_LIGHTMODE_BG_COLOR = "#ffffff"')," ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'DEFAULT_DARKMODE_BG_COLOR = "#121212"')," ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'DEFAULT_LIGTHMODE_SHINE = "#eeeeee"')," ",(0,r.kt)("br",null),"\n",(0,r.kt)("inlineCode",{parentName:"p"},'DEFAULT_DARKMODE_SHINE = "#6d6c6c"')," ",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"usetheme"},(0,r.kt)("inlineCode",{parentName:"h2"},"useTheme()")),(0,r.kt)("p",null,"For accessing ",(0,r.kt)("inlineCode",{parentName:"p"},"useTheme()")," hook:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'import { useTheme } from "react-khatra-placeholder";\n\n//example for toggle theme button\nconst ToggleTheme = () => {\n  const { darkTheme, handleTheme } = useTheme();\n  return <button onClick={() => handleTheme(!darkTheme)}>Toggle Theme</button>;\n};\n')),(0,r.kt)("h2",{id:"theming-in-action"},(0,r.kt)("inlineCode",{parentName:"h2"},"Theming in action:")),(0,r.kt)("p",null,"Here is quick example of how you can use theming options on your projects."),(0,r.kt)(o.GN,{lightModeBackground:"orange",lightModeColor:"brown",darkModeBackground:"lightgreen",darkModeColor:"green",darkModeShine:"lightblue",mdxType:"PThemeProvider"},(0,r.kt)(o.m_,{isLoading:!0,type:"ProductPlaceholder",animateWave:!0,style:{border:"1px solid brown",padding:"0.75rem",borderRadius:"0.75rem"},mdxType:"KhatraPlaceholder"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"<h2>Your Beautiful content.</h2>\n<div>\n  Lorem ipsum dolor, sit amet consectetur adipisicing elit. Quia, beatae\n  laudantium cupiditate dolorem officia officiis veritatis qui mollitia\n  nostrum voluptate similique, magnam quaerat error veniam quas omnis\n  quasi? Sint, obcaecati.\n</div>\n"))),(0,r.kt)(l.Z,{mdxType:"ToggleTheme"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},'//for providing darkTheme state and handler globally\nimport { PThemeProvider } from "react-khatra-placeholder";\n\nreturn (\n  <PThemeProvider\n    lightModeBackground="orange"\n    lightModeColor="brown"\n    darkModeBackground="lightgreen"\n    darkModeColor="green"\n    darkModeShine="lightblue"\n  >\n    <KhatraPlaceholder\n      isLoading={true}\n      type="ProductPlaceholder"\n      animateWave\n      style={{\n        border: "1px solid brown",\n        padding: "0.75rem",\n        borderRadius: "0.75rem",\n      }}\n    >\n      <div>Your Real Product</div>\n    </KhatraPlaceholder>\n    <ToggleTheme />\n  </PThemeProvider>\n);\n')))}s.isMDXComponent=!0}}]);